{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/ExpenseFilter/ExpensesFilter.js","components/Expenses/NewExpenseComponent.js","components/NewExpense/NewExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","day","date","toLocaleString","month","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesFilter","value","selected","onChange","event","onFilterChange","target","NewExpenseComponent","useState","filteredYear","setFilteredYear","filterExpense","items","filter","expense","toString","selectedYear","map","id","NewExpenseForm","enterdTitle","setEnterTitle","enteredAmount","setEnterAmount","enteredDate","setEnterDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","max","NewExpense","enteredExpenseData","expensedata","Math","random","onAddExpense","DUMMY_Expense","App","expenses","setExpenses","prevExpense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31516108.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const day = props.date.toLocaleString(\"th-TH\", { day: \"2-digit\" });\r\n  const month = props.date.toLocaleString(\"th-TH\", { month: \"long\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__day\">{day}</div>\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">{props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onFilterChange(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpenseComponent.css\";\r\nimport Expenseitem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"../ExpenseFilter/ExpensesFilter\";\r\n\r\nconst NewExpenseComponent = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  const filterExpense = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onFilterChange={filterChangeHandler}\r\n      />\r\n      {filterExpense.map((expense) => (\r\n        <Expenseitem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default NewExpenseComponent;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpenseForm.css\";\r\n\r\nconst NewExpenseForm = (props) => {\r\n  const [enterdTitle, setEnterTitle] = useState(\"\");\r\n  const [enteredAmount, setEnterAmount] = useState(\"\");\r\n  const [enteredDate, setEnterDate] = useState(\"\");\r\n  const titleChangeHandler = (event) => {\r\n    setEnterTitle(event.target.value);\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnterAmount(event.target.value);\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setEnterDate(event.target.value);\r\n  };\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enterdTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnterTitle(\"\");\r\n    setEnterAmount(\"\");\r\n    setEnterDate(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enterdTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            step=\"1\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Add New Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default NewExpenseForm;\r\n","import \"./NewExpense.css\";\r\nimport NewExpenseForm from \"./NewExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n    const saveExpenseDataHandler =(enteredExpenseData)=>{\r\n        const expensedata={\r\n            ...enteredExpenseData,\r\n            id:Math.random().toString()\r\n        };\r\n        props.onAddExpense(expensedata);\r\n    }\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <NewExpenseForm onSaveExpenseData={saveExpenseDataHandler}/>\r\n    </div>\r\n  );\r\n};\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\nimport NewExpenseComponent from \"./components/Expenses/NewExpenseComponent\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_Expense = [\n  {\n    id: \"e1\",\n    title: \"New PS5\",\n    amount: 499.99,\n    date: new Date(2021, 2, 14),\n  },\n  { id: \"e2\", title: \"New Monitor\", amount: 199.99, date: new Date(2021, 1, 1) },\n  {\n    id: \"e3\",\n    title: \"New Game\",\n    amount: 79.99,\n    date: new Date(2021, 3, 9),\n  },\n  {\n    id: \"e4\",\n    title: \"New Fan\",\n    amount: 20,\n    date: new Date(2021, 3, 19),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_Expense);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpense) => {\n      return [expense, ...prevExpense];\n    });\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n\n      <NewExpenseComponent items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}